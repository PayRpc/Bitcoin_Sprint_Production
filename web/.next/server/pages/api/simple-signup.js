"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/simple-signup";
exports.ids = ["pages/api/simple-signup"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsimple-signup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csimple-signup.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsimple-signup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csimple-signup.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_simple_signup_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\simple-signup.ts */ \"(api)/./pages/api/simple-signup.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_simple_signup_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_simple_signup_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/simple-signup\",\n        pathname: \"/api/simple-signup\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_simple_signup_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNpbXBsZS1zaWdudXAmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q3NpbXBsZS1zaWdudXAudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDMkQ7QUFDM0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iaXRjb2luLXNwcmludC13ZWIvPzk3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxzaW1wbGUtc2lnbnVwLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2ltcGxlLXNpZ251cFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NpbXBsZS1zaWdudXBcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsimple-signup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csimple-signup.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/generateKey.ts":
/*!****************************!*\
  !*** ./lib/generateKey.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTierFromPrefix: () => (/* binding */ extractTierFromPrefix),\n/* harmony export */   generateApiKey: () => (/* binding */ generateApiKey),\n/* harmony export */   generateTierApiKey: () => (/* binding */ generateTierApiKey),\n/* harmony export */   revokeApiKey: () => (/* binding */ revokeApiKey),\n/* harmony export */   updateApiKeyUsage: () => (/* binding */ updateApiKeyUsage),\n/* harmony export */   validateApiKeyFormat: () => (/* binding */ validateApiKeyFormat),\n/* harmony export */   verifyApiKey: () => (/* binding */ verifyApiKey)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) global.prisma = prisma;\n/**\r\n * Generate a 256-bit random API key with product prefix.\r\n * \r\n * @param prefix - Product identifier prefix (default: \"sprint\")\r\n * @returns API key in format: {prefix}_{base64url_random_bytes}\r\n * \r\n * Benefits:\r\n * - Security: Full 256-bit entropy in the random portion\r\n * - Ops visibility: Easy to identify Bitcoin Sprint keys in logs\r\n * - URL-safe: Uses base64url encoding (no padding issues)\r\n * - Consistent: Always 43 chars + prefix length\r\n * \r\n * Example: sprint_fqz9XjX6ytY0jAqZDjR1OeL12rbmZrF6P0pB5oU3qZ0\r\n */ function generateApiKey(prefix = \"sprint\") {\n    // Generate 256-bit (32 bytes) of cryptographically secure random data\n    const randomBytes = crypto__WEBPACK_IMPORTED_MODULE_1___default().randomBytes(32);\n    // Convert to base64url (URL-safe, no padding)\n    // 32 bytes -> 43 characters (no padding needed for 32 bytes)\n    const randomPart = randomBytes.toString(\"base64url\");\n    return `${prefix}_${randomPart}`;\n}\n/**\r\n * Generate API key with tier-specific prefix for operational visibility.\r\n * \r\n * @param tier - API tier (FREE, PRO, ENTERPRISE, ENTERPRISE_PLUS)\r\n * @returns API key with tier-aware prefix\r\n */ function generateTierApiKey(tier) {\n    const tierPrefixes = {\n        \"FREE\": \"sprint-free\",\n        \"PRO\": \"sprint-pro\",\n        \"ENTERPRISE\": \"sprint-ent\",\n        \"ENTERPRISE_PLUS\": \"sprint-entplus\"\n    };\n    const prefix = tierPrefixes[tier] || \"sprint\";\n    return generateApiKey(prefix);\n}\n/**\r\n * Extract and validate API key prefix.\r\n * \r\n * @param token - API key to validate\r\n * @returns Object with validation status and extracted info\r\n */ function validateApiKeyFormat(token) {\n    if (!token || typeof token !== \"string\") {\n        return {\n            valid: false,\n            reason: \"Token is required and must be a string\"\n        };\n    }\n    // Check for underscore separator\n    if (!token.includes(\"_\")) {\n        return {\n            valid: false,\n            reason: \"Invalid token format: missing prefix separator\"\n        };\n    }\n    const parts = token.split(\"_\");\n    if (parts.length !== 2) {\n        return {\n            valid: false,\n            reason: \"Invalid token format: should be prefix_randompart\"\n        };\n    }\n    const [prefix, randomPart] = parts;\n    // Validate prefix format\n    if (!prefix || !/^[a-z0-9-]+$/.test(prefix)) {\n        return {\n            valid: false,\n            reason: \"Invalid prefix format: should contain only lowercase letters, numbers, and hyphens\"\n        };\n    }\n    // Validate random part length (should be 43 chars for base64url of 32 bytes)\n    if (!randomPart || randomPart.length !== 43) {\n        return {\n            valid: false,\n            reason: \"Invalid token format: random part should be 43 characters\"\n        };\n    }\n    // Validate base64url characters\n    if (!/^[A-Za-z0-9_-]+$/.test(randomPart)) {\n        return {\n            valid: false,\n            reason: \"Invalid token format: random part contains invalid characters\"\n        };\n    }\n    // Check if it's a known Bitcoin Sprint prefix\n    const validPrefixes = [\n        \"sprint\",\n        \"sprint-free\",\n        \"sprint-pro\",\n        \"sprint-ent\",\n        \"sprint-entplus\"\n    ];\n    if (!validPrefixes.includes(prefix)) {\n        return {\n            valid: false,\n            reason: `Unknown prefix: ${prefix}. Expected one of: ${validPrefixes.join(\", \")}`\n        };\n    }\n    return {\n        valid: true,\n        prefix\n    };\n}\n/**\r\n * Comprehensive API key verification with database lookup.\r\n * \r\n * @param token - API key to verify\r\n * @returns Promise with validation result including database record if valid\r\n */ async function verifyApiKey(token) {\n    try {\n        // Step 1: Format validation\n        const formatCheck = validateApiKeyFormat(token);\n        if (!formatCheck.valid) {\n            return {\n                valid: false,\n                reason: formatCheck.reason,\n                prefix: formatCheck.prefix\n            };\n        }\n        // Step 2: Database lookup\n        const apiKeyRecord = await prisma.apiKey.findUnique({\n            where: {\n                key: token\n            }\n        });\n        if (!apiKeyRecord) {\n            return {\n                valid: false,\n                reason: \"API key not found in database\",\n                prefix: formatCheck.prefix\n            };\n        }\n        // Step 3: Expiration check\n        const now = new Date();\n        if (apiKeyRecord.expiresAt < now) {\n            return {\n                valid: false,\n                reason: `API key expired on ${apiKeyRecord.expiresAt.toISOString()}`,\n                prefix: formatCheck.prefix,\n                apiKey: {\n                    ...apiKeyRecord,\n                    requests: apiKeyRecord.requests ?? 0,\n                    blocksToday: apiKeyRecord.blocksToday ?? 0\n                }\n            };\n        }\n        // Step 4: Revocation check\n        if (apiKeyRecord.revoked) {\n            return {\n                valid: false,\n                reason: \"API key has been revoked\",\n                prefix: formatCheck.prefix,\n                apiKey: {\n                    ...apiKeyRecord,\n                    requests: apiKeyRecord.requests ?? 0,\n                    blocksToday: apiKeyRecord.blocksToday ?? 0\n                }\n            };\n        }\n        // Step 5: Extract tier from prefix for validation\n        const tierFromPrefix = extractTierFromPrefix(formatCheck.prefix);\n        // Optional: Verify tier consistency (prefix should match database tier)\n        if (tierFromPrefix && tierFromPrefix !== apiKeyRecord.tier) {\n            console.warn(`Tier mismatch: prefix suggests ${tierFromPrefix}, database has ${apiKeyRecord.tier}`);\n        }\n        // All checks passed - valid key\n        return {\n            valid: true,\n            apiKey: {\n                ...apiKeyRecord,\n                requests: apiKeyRecord.requests ?? 0,\n                blocksToday: apiKeyRecord.blocksToday ?? 0\n            },\n            tier: apiKeyRecord.tier,\n            prefix: formatCheck.prefix\n        };\n    } catch (error) {\n        console.error(\"[verifyApiKey] Database error:\", error);\n        return {\n            valid: false,\n            reason: \"Database error during verification\"\n        };\n    }\n}\n/**\r\n * Extract tier information from API key prefix.\r\n * \r\n * @param prefix - API key prefix\r\n * @returns Tier string or null if not tier-specific\r\n */ function extractTierFromPrefix(prefix) {\n    const tierMap = {\n        \"sprint-free\": \"FREE\",\n        \"sprint-pro\": \"PRO\",\n        \"sprint-ent\": \"ENTERPRISE\",\n        \"sprint-entplus\": \"ENTERPRISE_PLUS\",\n        \"sprint\": null // Generic prefix, no tier info\n    };\n    return tierMap[prefix] || null;\n}\n/**\r\n * Update API key usage statistics (call this after successful verification).\r\n * \r\n * @param token - API key that was used\r\n * @param incrementBlocks - Whether to increment blocks count (default: false)\r\n */ async function updateApiKeyUsage(token, incrementBlocks = false) {\n    try {\n        const updateData = {\n            lastUsedAt: new Date(),\n            requests: {\n                increment: 1\n            }\n        };\n        if (incrementBlocks) {\n            updateData.blocksToday = {\n                increment: 1\n            };\n        }\n        await prisma.apiKey.update({\n            where: {\n                key: token\n            },\n            data: updateData\n        });\n    } catch (error) {\n        console.error(\"[updateApiKeyUsage] Failed to update usage:\", error);\n    // Don't throw - usage tracking shouldn't break API functionality\n    }\n}\n/**\r\n * Revoke an API key (mark as revoked in database).\r\n * \r\n * @param token - API key to revoke\r\n * @returns Success status\r\n */ async function revokeApiKey(token) {\n    try {\n        const updated = await prisma.apiKey.update({\n            where: {\n                key: token\n            },\n            data: {\n                revoked: true\n            }\n        });\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"[revokeApiKey] Failed to revoke key:\", error);\n        return {\n            success: false,\n            reason: error instanceof Error ? error.message : \"Database error\"\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/generateKey.ts\n");

/***/ }),

/***/ "(api)/./pages/api/simple-signup.ts":
/*!************************************!*\
  !*** ./pages/api/simple-signup.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_generateKey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/generateKey */ \"(api)/./lib/generateKey.ts\");\n\nasync function handler(req, res) {\n    console.log(\"[SIMPLE SIGNUP] Request method:\", req.method);\n    console.log(\"[SIMPLE SIGNUP] Request body:\", req.body);\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { email, tier } = req.body;\n        // Basic validation\n        if (!email || !email.includes(\"@\")) {\n            return res.status(400).json({\n                error: \"Valid email required\"\n            });\n        }\n        if (!tier) {\n            return res.status(400).json({\n                error: \"Tier required\"\n            });\n        }\n        // Generate a test API key with tier-specific prefix\n        const key = (0,_lib_generateKey__WEBPACK_IMPORTED_MODULE_0__.generateTierApiKey)(tier);\n        console.log(\"[SIMPLE SIGNUP] Generated key:\", key);\n        // Return without database for now\n        return res.status(200).json({\n            id: \"test-\" + Date.now(),\n            key: key,\n            tier: tier,\n            expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n            message: \"Test key generated (not persisted)\"\n        });\n    } catch (error) {\n        console.error(\"[SIMPLE SIGNUP] Error:\", error);\n        return res.status(500).json({\n            error: \"Internal server error\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc2ltcGxlLXNpZ251cC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUMyRDtBQUU1QyxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RUMsUUFBUUMsR0FBRyxDQUFDLG1DQUFtQ0gsSUFBSUksTUFBTTtJQUN6REYsUUFBUUMsR0FBRyxDQUFDLGlDQUFpQ0gsSUFBSUssSUFBSTtJQUVyRCxJQUFJTCxJQUFJSSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPSCxJQUFJSyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHVixJQUFJSyxJQUFJO1FBRWhDLG1CQUFtQjtRQUNuQixJQUFJLENBQUNJLFNBQVMsQ0FBQ0EsTUFBTUUsUUFBUSxDQUFDLE1BQU07WUFDbEMsT0FBT1YsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztZQUF1QjtRQUM5RDtRQUVBLElBQUksQ0FBQ0UsTUFBTTtZQUNULE9BQU9ULElBQUlLLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBZ0I7UUFDdkQ7UUFFQSxvREFBb0Q7UUFDcEQsTUFBTUksTUFBTWQsb0VBQWtCQSxDQUFDWTtRQUUvQlIsUUFBUUMsR0FBRyxDQUFDLGtDQUFrQ1M7UUFFOUMsa0NBQWtDO1FBQ2xDLE9BQU9YLElBQUlLLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJNLElBQUksVUFBVUMsS0FBS0MsR0FBRztZQUN0QkgsS0FBS0E7WUFDTEYsTUFBTUE7WUFDTk0sV0FBVyxJQUFJRixLQUFLQSxLQUFLQyxHQUFHLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxNQUFNRSxXQUFXO1lBQ3RFQyxTQUFTO1FBQ1g7SUFFRixFQUFFLE9BQU9WLE9BQU87UUFDZE4sUUFBUU0sS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBT1AsSUFBSUssTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsT0FBTztZQUNQVyxTQUFTWCxpQkFBaUJZLFFBQVFaLE1BQU1VLE9BQU8sR0FBRztRQUNwRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iaXRjb2luLXNwcmludC13ZWIvLi9wYWdlcy9hcGkvc2ltcGxlLXNpZ251cC50cz8yZTRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xyXG5pbXBvcnQgeyBnZW5lcmF0ZVRpZXJBcGlLZXkgfSBmcm9tIFwiLi4vLi4vbGliL2dlbmVyYXRlS2V5XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XHJcbiAgY29uc29sZS5sb2coJ1tTSU1QTEUgU0lHTlVQXSBSZXF1ZXN0IG1ldGhvZDonLCByZXEubWV0aG9kKTtcclxuICBjb25zb2xlLmxvZygnW1NJTVBMRSBTSUdOVVBdIFJlcXVlc3QgYm9keTonLCByZXEuYm9keSk7XHJcbiAgXHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgZW1haWwsIHRpZXIgfSA9IHJlcS5ib2R5O1xyXG4gICAgXHJcbiAgICAvLyBCYXNpYyB2YWxpZGF0aW9uXHJcbiAgICBpZiAoIWVtYWlsIHx8ICFlbWFpbC5pbmNsdWRlcygnQCcpKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiAnVmFsaWQgZW1haWwgcmVxdWlyZWQnIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghdGllcikge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ1RpZXIgcmVxdWlyZWQnIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEdlbmVyYXRlIGEgdGVzdCBBUEkga2V5IHdpdGggdGllci1zcGVjaWZpYyBwcmVmaXhcclxuICAgIGNvbnN0IGtleSA9IGdlbmVyYXRlVGllckFwaUtleSh0aWVyKTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ1tTSU1QTEUgU0lHTlVQXSBHZW5lcmF0ZWQga2V5OicsIGtleSk7XHJcbiAgICBcclxuICAgIC8vIFJldHVybiB3aXRob3V0IGRhdGFiYXNlIGZvciBub3dcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIGlkOiAndGVzdC0nICsgRGF0ZS5ub3coKSxcclxuICAgICAga2V5OiBrZXksXHJcbiAgICAgIHRpZXI6IHRpZXIsXHJcbiAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDMwICogMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgbWVzc2FnZTogJ1Rlc3Qga2V5IGdlbmVyYXRlZCAobm90IHBlcnNpc3RlZCknXHJcbiAgICB9KTtcclxuXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1tTSU1QTEUgU0lHTlVQXSBFcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBcclxuICAgICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLFxyXG4gICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJnZW5lcmF0ZVRpZXJBcGlLZXkiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsIm1ldGhvZCIsImJvZHkiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJlbWFpbCIsInRpZXIiLCJpbmNsdWRlcyIsImtleSIsImlkIiwiRGF0ZSIsIm5vdyIsImV4cGlyZXNBdCIsInRvSVNPU3RyaW5nIiwibWVzc2FnZSIsImRldGFpbHMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/simple-signup.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsimple-signup&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csimple-signup.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();