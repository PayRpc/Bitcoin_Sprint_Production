version: '3.8'

services:
  fastapi-gateway:
    build: .
    ports:
      - "8000:8000"
    environment:
      - BACKEND_URL=http://backend:8080
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - backend
    volumes:
      - ./.env:/app/.env:ro
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    # Replace with your actual Go backend image/service
    image: your-go-backend:latest
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    volumes:
      - ../:/app  # Mount the Go backend code
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    # Uncomment and modify for your Go backend
    # command: ["./your-backend-binary"]
    # build:
    #   context: ..
    #   dockerfile: Dockerfile.backend

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - bitcoin-sprint
    restart: unless-stopped
    depends_on:
      - fastapi-gateway

networks:
  bitcoin-sprint:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs:
