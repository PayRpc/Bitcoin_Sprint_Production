name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-matrix:
    name: Build & Test (${{ matrix.name }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            goarch: amd64
            rust_target: x86_64-unknown-linux-gnu
          - name: linux-arm64
            runner: ubuntu-latest
            goarch: arm64
            rust_target: aarch64-unknown-linux-gnu
          - name: windows-amd64
            runner: windows-latest
            goarch: amd64
            rust_target: x86_64-pc-windows-msvc
          - name: windows-arm64
            runner: windows-latest
            goarch: arm64
            rust_target: aarch64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Add Rust target (if needed)
        shell: bash
        working-directory: secure/rust
        run: |
          if [ "${{ matrix.rust_target }}" != "$(rustc -vV | sed -n 's/^host: //p')" ]; then rustup target add ${{ matrix.rust_target }} || true; fi

      - name: Build Rust securebuffer
        shell: bash
        working-directory: secure/rust
        run: |
          # Try native build first; if cross-target was added, build for that target
          if [ "${{ matrix.rust_target }}" = "$(rustc -vV | sed -n 's/^host: //p')" ]; then
            cargo build --release
          else
            cargo build --release --target ${{ matrix.rust_target }}
          fi

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run Go tests (with CGO)
        shell: bash
        env:
          CGO_ENABLED: "1"
          GOARCH: ${{ matrix.goarch }}
          # Make sure cgo can find the rust cdylib in the repo relative path
          CGO_LDFLAGS: -L${{ github.workspace }}/secure/rust/target/release
        run: |
          echo "Running go test for ${{ matrix.name }} (GOARCH=${GOARCH})"
          go env
          go test ./...
